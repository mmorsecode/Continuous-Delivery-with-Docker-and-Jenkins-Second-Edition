pipeline {
    agent {
        label 'docker-agent'
    }

    environment {
        IMAGE_NAME = 'localhost:5001/calculator'
        DOCKER_USER = 'testuser'
        DOCKER_PASS = 'testpassword'
    }

    stages {
        stage('Prepare Environment') {
            steps {
                sh '''
                cd Chapter08/sample1
                chmod +x gradlew
                ls -l gradlew
                '''
            }
        }

        stage('Compile') {
            steps {
                sh '''
                cd Chapter08/sample1
                ./gradlew compileJava
                '''
            }
        }

        stage('Unit Test') {
            steps {
                sh '''
                cd Chapter08/sample1
                ./gradlew test
                '''
            }
        }

        stage('Code Coverage') {
            when {
                branch 'master'
            }
            steps {
                sh '''
                cd Chapter08/sample1
                ./gradlew jacocoTestReport
                '''
                publishHTML(target: [
                    reportDir: 'Chapter08/sample1/build/reports/jacoco/test/html',
                    reportFiles: 'index.html',
                    reportName: "JaCoCo Code Coverage"
                ])
            }
        }

        stage('Static Analysis') {
            when {
                anyOf {
                    changeRequest()
                    branch 'master'
                }
            }
            steps {
                sh '''
                cd Chapter08/sample1
                ./gradlew checkstyleMain
                '''
                publishHTML(target: [
                    reportDir: 'Chapter08/sample1/build/reports/checkstyle/main',
                    reportFiles: 'main.html',
                    reportName: "Checkstyle Report"
                ])
            }
        }

        stage('Validate Branch Name') {
            when {
                not {
                    anyOf {
                        branch 'master'
                        expression { return env.BRANCH_NAME =~ /.*feature.*/ }
                    }
                }
            }
            steps {
                error 'This branch is neither master nor a feature branch. Pipeline fails!'
            }
        }

        stage('Build & Push Docker Image') {
            when {
                branch 'feature/webhook-test'
            }
            steps {
                script {
                    withCredentials([usernamePassword(credentialsId: 'docker-registry', usernameVariable: 'USER', passwordVariable: 'PASS')]) {
                        sh '''
                        cd Chapter08/sample1
                        ./gradlew build

                        echo $PASS | docker login https://localhost:5001 -u $USER --password-stdin
                        docker build -t $IMAGE_NAME .
                        docker push $IMAGE_NAME
                        '''
                    }
                }
            }
        }
    }

    post {
        success {
            echo 'tests pass!'
        }
        failure {
            echo 'tests fail!'
        }
    }
}

